var a=function(t,r){if("[object String]"!==Object.prototype.toString.call(t))throw TypeError('a: the argument matching "str" must be a string.');return Object.prototype.toString.call(r).toLowerCase()==="[object "+t.toLowerCase()+"]"},what=function(t){return Object.prototype.toString.call(t).toLowerCase().slice(8,-1)},classes=["array","boolean","date","error","function","null","number","object","regexp","string","undefined"],is=function(){return classes.reduce(function(t,r){return t[r]=a.bind(null,r),t},a)}(),always=function(){var t=function(t,r,e){if(!is[t](r)){var n=Object.prototype.toString.call(e);if("[object Function]"===n)throw TypeError(e(r,t,what(r)));if("[object String]"===n)throw TypeError(e);var e="always."+t+": value was not a "+t+" (actual type was "+what(r)+")";throw TypeError(e)}};return classes.reduce(function(r,e){return r[e]=t.bind(null,e),r},t)}(),never=function(){var t=function(t,r,e){if(is[t](r)){var n=Object.prototype.toString.call(e);if("[object Function]"===n)throw TypeError(e(r,t,what(r)));if("[object String]"===n)throw TypeError(e);var e="never."+t+": value was not a "+t+" (actual type was "+what(r)+")";throw TypeError(e)}};return classes.reduce(function(r,e){return r[e]=t.bind(null,e),r},t)}();is.a=a,is.what=what,is.always=always,is.never=never,"undefined"!=typeof module&&(module.exports=is);